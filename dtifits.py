import os
import subprocess
import sys

# Use the first command-line argument as the directory, or default to the current working directory
directory = sys.argv[1] if len(sys.argv) > 1 else os.getcwd()

# Loop through each file in the directory
for root, dirs, files in os.walk(directory):
    for file in files:
        if file.endswith('.bval'):
            # Get the full path of the .bval file
            bval_path = os.path.join(root, file)
            
            # Derive the base filename (without extension)
            base_filename = file.replace('.bval', '')
            
            # Construct paths for .bvec and NIfTI
            bvec_path = os.path.join(root, base_filename + '.bvec')
            nii_path = os.path.join(root, base_filename)  # NIfTI without extension
            bet_output = os.path.join(root, base_filename)  # BET output
            out_output = os.path.join(root, 'o' + base_filename)  # Output for dtifit
            
            # Run the 'bet' command for brain extraction
            bet_command = ['bet', nii_path, bet_output, '-f', '0.3', '-g', '0', '-n', '-m']
            print(f'Running BET command: {" ".join(bet_command)}')
            subprocess.run(bet_command)
            
            bet_output = bet_output + '_mask'  # BET appends "mask"

            # Run the 'dtifit' command for tensor derivation
            dtifit_command = [
                'dtifit', '--save_tensor',
                '--data=' + nii_path,
                '--out=' + out_output,
                '--mask=' + bet_output,
                '--bvecs=' + bvec_path,
                '--bvals=' + bval_path
            ]
            print(f'Running dtifit command: {" ".join(dtifit_command)}')
            subprocess.run(dtifit_command)
            
            # Paths for FA and V1 images generated by dtifit
            fa_image = out_output + '_FA.nii.gz'
            v1_image = out_output + '_V1.nii.gz'
            output_image = os.path.join(root, base_filename + '.png')  # Output PNG for fsleyes render
            
            # Run fsleyes to render FA and V1 images into a bitmap
            fsleyes_command = [
                'fsleyes', 'render', '-sz', '1596', '1200',
                '--outfile=' + output_image,
                fa_image, v1_image,
                '--overlayType', 'linevector'
            ]
            print(f'Running fsleyes command: {" ".join(fsleyes_command)}')
            subprocess.run(fsleyes_command)
